 Mod Sum
Solved
feature icon
Using hints is now penalty free
Use Hint
Problem Description
Given an array of integers A, calculate the sum of A [ i ] % A [ j ] for all possible i, j pairs. Return sum % (109 + 7) as an output.



Problem Constraints
1 <= length of the array A <= 105

1 <= A[i] <= 103



Input Format
The only argument given is the integer array A.



Output Format
Return a single integer denoting sum % (109 + 7).



Example Input
Input 1:

 A = [1, 2, 3]
Input 2:

 A = [17, 100, 11]


Example Output
Output 1:

 5
Output 2:

 61


Example Explanation
Explanation 1:

 (1 % 1) + (1 % 2) + (1 % 3) + (2 % 1) + (2 % 2) + (2 % 3) + (3 % 1) + (3 % 2) + (3 % 3) = 5

//////////////////////////////////////////////////////////////////////////////////////////////////////////
public class Solution {
    public int solve(ArrayList<Integer> A) {
        HashMap<Integer,Integer> hm=new HashMap<>();
            for(int i=0;i<A.size();i++){
            hm.put(A.get(i),hm.getOrDefault(A.get(i),0)+1);
        }
        int mod=1000000007;
        long sum=0;
         // for (Integer key: map.keySet())
     for(Integer k:hm.keySet()){
       for(Integer k1:hm.keySet()){
           sum = (sum%mod +  ((k%k1)%mod*hm.get(k1)%mod
           *hm.get(k)%mod
           )%mod)%mod;
       }
     }
     return (int)sum%mod;
    }
}
