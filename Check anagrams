Problem Description
You are given two lowercase strings A and B each of length N. Return 1 if they are anagrams to each other and 0 if not.

Note : Two strings A and B are called anagrams to each other if A can be formed after rearranging the letters of B.


Problem Constraints
1 <= N <= 105
A and B are lowercase strings


Input Format
Both arguments A and B are a string.


Output Format
Return 1 if they are anagrams and 0 if not


Example Input
Input 1:
A = "cat"
B = "bat"
Input 2:
A = "secure"
B = "rescue"


Example Output
Output 1:
0
Output 2:
1


Example Explanation
For Input 1:
The words cannot be rearranged to form the same word. So, they are not anagrams.
For Input 2:
They are an anagram.
////////////////////
public class Solution {
    public int solve(String A, String B) {
         int[] freq1 = new int[27];
           int[] freq2 = new int[27];
         if(A.length() != B.length())
         return 0;
        for(int i =0;i<A.length();i++){
            freq1[A.charAt(i)-97] += 1; 
             freq2[B.charAt(i)-97] += 1; 
        }
       
        for(int i =0;i<freq1.length;i++){
            if(freq1[i] != freq2[i]){
               return 0;
            }
        }
        return 1;
    }
}
