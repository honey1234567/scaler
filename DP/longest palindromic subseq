Given a string A. Find the longest palindromic subsequence (A subsequence which does not need to be contiguous and is a palindrome).

You need to return the length of longest palindromic subsequence.
 A = "bebeeed"
 The longest palindromic subsequence is "eeee", which has a length of 4.
////////////////////////////////////////////
public class Solution {
    public int solve(String A) {
        int N =A.length();
        int count = 0;
        int[][] dp = new int[A.length()][A.length()];
       for(int gap = 0;gap<N;gap++){
            for(int i=0,j=gap;j<N;i++,j++){
                if(gap==0) {dp[i][j] = 1;
                count += 1;
                }
             else{
                    if(A.charAt(i) == A.charAt(j)){
                      dp[i][j] = 2+dp[i+1][j-1];
                     // if(dp[i][j]) count += 1;
                    }else{
                        dp[i][j] = Math.max(dp[i+1][j],dp[i][j-1]);
                    }
                }
            }
        }
   
        return dp[0][N-1];
    }
}
