https://leetcode.com/problems/decode-ways/
// class Solution {
//     public int numDecodings(String s) {
//         return numway(0,s);
//         //charat and substring throws stringindexoutofbound so go to  taht condn if valid index,rest /////handle in base
//     }
//     int numway(int i, String s){
//         if(i >= s.length()) return 1;
//         else if(s.charAt(i) == '0') return 0;
//         else if(i == s.length()-1) return 1;
//         else if(s.charAt(i) == '1' || (s.charAt(i) == '2' && s.charAt(i+1)-'0' >= 0 && s.charAt(i+1)-'0' <= 6))
//         {
// return numway(i+1,s) + numway(i+2,s);
//         }
         
//         else return numway(i+1,s);
//     }
// }
class Solution {
    public int numDecodings(String s) {
        int[] dp = new int[s.length() + 1];
        if(s.length() == 0 || s.charAt(0) == '0') return 0;
        dp[0] = 1;
        dp[1] = 1;
        for(int i=2;i<=s.length();i++){
            if(s.charAt(i-1)-'0' >= 1 && s.charAt(i-1)-'0' <= 9) dp[i] = dp[i-1];
            if(s.charAt(i-2)-'0' == 1) dp[i] += dp[i-2];
            else if(s.charAt(i-2)-'0' == 2 && ( s.charAt(i-1)-'0' >= 0 &&  s.charAt(i-1)-'0' <= 6)){
               dp[i] += dp[i-2]; 
            }
        }
        return dp[s.length()];
    }
}
