Given an array, arr[] of size N, the task is to find the count of array indices such that removing an element from these indices makes the sum of even-indexed and odd-indexed array elements equal.



Problem Constraints
1 <= n <= 105
-105 <= A[i] <= 105


Input Format
First argument contains an array A of integers of size N


Output Format
Return the count of array indices such that removing an element from these indices makes the sum of even-indexed and odd-indexed array elements equal.



Example Input
Input 1:
A=[2, 1, 6, 4]
Input 2:

A=[1, 1, 1]


Example Output
Output 1:
1
Output 2:

3


Example Explanation
Explanation 1:
Removing arr[1] from the array modifies arr[] to { 2, 6, 4 } such that, arr[0] + arr[2] = arr[1]. 
Therefore, the required output is 1.
////////////
based on the observation that removing any element from the given array makes even indices of succeeding elements
as odd and odd indices of the succeeding elements as even.
Follow the steps below to solve the problem:

Initialize two variables, say evenSum and oddSum,
to store the sum of odd-indexed and even-indexed elements of the given array respectively.

Traverse the array using variable i.
Remove every ith element of the array and update the sum of the remaining even-indexed elements
and the odd-indexed elements based on the above observation. Check if the sums are equal or not.
If found to be true, then increment the count.

Finally, print the count obtained. Check out the complete solution for more clarity.

Time complexity : O(n)
/////////////////
The simplest approach to solve this problem is to traverse the array 
and for each array element, check 
if removing the element from the array makes the sum of even-indexed and odd-indexed array elements equal or not. 
If found to be true, then increment the count. Finally, print the count.

///////////////////////////////
public class Solution {
    public int solve(int[] A) {
         int[] pfodd = new int[A.length];
         pfodd[0] = 0;
        for(int i = 1;i<A.length;i++){
          if(i%2 == 0){
               pfodd[i] = pfodd[i-1];
          }else{
                  pfodd[i] = pfodd[i-1] + A[i];
          }
          
        }
        int[] pfe = new int[A.length];
         pfe[0] = A[0];
            for(int i = 1;i<A.length;i++){
          if(i%2 != 0){
               pfe[i] = pfe[i-1];
          }else{
                  pfe[i] = pfe[i-1] + A[i];
          }
          
        }
      int count = 0;
      int n = A.length;
      for(int i=0;i<n;i++){
        if(i == 0){
            int evensum = pfodd[n-1];
            int oddsum = pfe[n-1] - pfe[0];//as 0 was even index
            if(evensum == oddsum) count++;
        }else{
            int evensum = pfe[i-1]+pfodd[n-1]-pfodd[i];
            int oddsum = pfodd[i-1]+pfe[n-1] - pfe[i];//as 0 was even index
            if(evensum == oddsum) count++;
        }
      }
      return count;
    }
}
